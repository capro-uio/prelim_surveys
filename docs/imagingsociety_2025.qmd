---
title: "User survey for ImagingSociety 2025 - National MRI research infrastructure in Norway"
author: "Dr. Athanasia M. Mowinckel"
affiliation: "Center for Lifespan Changes in Brain and Cognition, PSI, SV, UiO"
date: "`r Sys.Date()`"
editor: visual
execute:
  message: false
  warning: false
  echo: false
format:
  html:
    theme: capro-quarto.scss
    toc: true
    toc-location: left
    code-fold: true
    code-summary: "Show the code"
    embed-resources: true
    fig-responsive: true
    fig-cap-location: margin
reference-location: margin
citation-location: margin
params:
  run_nettskjema: true
---

```{r}
#| label: setup
#| include: false

# Load necessary R packages
library(patchwork)
library(nettskjemar)
library(gemini.R)
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)

# Set global options for the document
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.align = "center"
)

# Define survey ID
survey_id <- 540995
cb <- ns_get_codebook(540995)
dt <- ns_get_data(survey_id) |>
  mutate(
    across(everything(), ~ if_else(. == " ", NA, .))
  ) |>
  ns_add_labels(cb)

# Function to summarize text responses using Gemini LMM
summarize_text_response <- function(text_vector, prompt) {
  tryCatch(
    {
      # Combine non-empty text responses into a single string for the LMM
      combined_text <- paste(text_vector, collapse = " ")

      if (nchar(combined_text) == 0) {
        return("No text responses to summarize.")
      }

      # Generate a summary using the Gemini LMM
      # The actual function call will depend on the gemini.R package
      response <- gemini.R::gemini(
        prompt = paste(prompt, combined_text, sep = "\n\n")
      )

      return(response)
    },
    error = function(e) {
      message("Error summarizing text with Gemini LMM: ", e$message)
      return("Summary generation failed.")
    }
  )
}

coalesce_labelled <- function(...) {
  vars <- list(...)

  # Convert to regular vectors for coalescing
  unlabelled_vars <- lapply(vars, function(x) {
    if (haven::is.labelled(x)) as.vector(x) else x
  })

  # Perform coalesce on unlabelled vectors
  result <- do.call(coalesce, unlabelled_vars)

  # Find first labelled variable to preserve its attributes
  for (var in vars) {
    if (haven::is.labelled(var)) {
      attr(result, "labels") <- attr(var, "labels")
      attr(result, "label") <- attr(var, "label")
      class(result) <- class(var)
      break
    }
  }

  result
}
```

## Background

This report presents an analysis of the survey data collected for the national grant scheme application for MRI research infrastructure in Norway. 
The survey was designed to gather insights from the research community on the current use, needs, and challenges related to MRI for human research.

The following sections will present a summary of the key findings, including graphical representations of the quantitative data and a textual summary of the open-ended responses, with the help of the Gemini LMM.

## Survey Results

Of the `r nrow(dt)` responses, `r sum(dt$mri_current_use == "yes")` participants reported they currently use MRI for research. The majority of respondents, `r scales::percent(sum(dt$mri_future_use) / nrow(dt))`, indicated a future interest in using the new MRI facility for their work.

### Participant Demographics

This section provides an overview of the survey participants' roles and institutions.

```{r}
#| label: fig-demographics
#| fig-cap: "Distribution of Participants by Position and Institution"

# Create a frequency table of positions
position_counts <- dt |>
  count(position, sort = TRUE) |>
  mutate(percentage = n / sum(n) * 100)

# Create a bar chart for positions
p1 <- ggplot(position_counts, aes(x = reorder(position, -n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_text(aes(label = paste0(round(percentage, 1), "%")), vjust = -0.5) +
  labs(
    title = "Participant Distribution by Position",
    x = "Position",
    y = "Number of Responses"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Combine institution columns
dt_inst <- dt |>
  mutate(
    institution = coalesce_labelled(
      institution_university,
      institution_hospital,
      institution_type
    )
  )

institution_labels <- setNames(
  names(attr(dt_inst$institution, "labels")),
  attr(dt_inst$institution, "labels")
)

# Create a frequency table of institutions
institution_counts <- dt_inst |>
  count(institution, sort = TRUE) |>
  mutate(percentage = n / sum(n) * 100)

# Create a bar chart for institutions
p2 <- ggplot(
  institution_counts,
  aes(
    x = reorder(institution, -n),
    y = n
  )
) +
  geom_bar(
    stat = "identity",
    fill = "darkgreen"
  ) +
  geom_text(
    aes(
      label = paste0(round(percentage, 1), "%")
    ),
    vjust = -0.5
  ) +
  labs(
    title = "Participant Distribution by Institution",
    x = "Institution",
    y = "Number of Responses"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = institution_labels)

p1 + p2
```

### Research Areas

```{r}
#| label: field-summary
#| results: asis

# Prompt for the Gemini LMM
summary_prompt <- "Please summarize the following survey responses regarding which research area respondents of the survey are in."

# Summarize the 'comments' column
text_summary <- summarize_text_response(dt$research_area, summary_prompt)

# Print the summary
cat(text_summary)
```

### How MRI Would Enhance Research

```{r}
#| label: future-summary
#| results: asis

# Prompt for the Gemini LMM
summary_prompt <- "Please summarize the following survey responses regarding how access to MRI would expand and improve the research of respondents."

# Summarize the 'comments' column
text_summary <- summarize_text_response(dt$mri_enhance, summary_prompt)

# Print the summary
cat(text_summary)
```

### Future Needs

This section analyzes which conditions are considered most important for the future of MRI research in Norway.

```{r}
#| label: fig-future-needs
#| fig-cap: "Future Conditions for MRI Research"
#| fig-height: 7

# Use pivot_longer to get a count of each selected condition
future_conditions_counts <- dt |>
  pivot_longer(
    cols = starts_with("mri_future_conditions."),
    names_to = "condition",
    values_to = "selected",
    values_transform = list(
      selected = as.integer
    )
  ) |>
  group_by(condition) |>
  summarise(
    n = sum(selected),
    total = n(),
    percent = n / total * 100,
    .groups = "drop"
  ) |>
  separate(condition, into = c(NA, "condition"), sep = "\\.") |>
  arrange(desc(n))

# Create a bar chart with a simple style similar to your example
ggplot(
  future_conditions_counts,
  aes(x = reorder(condition, -n), y = n)
) +
  geom_bar(
    stat = "identity",
    aes(fill = percent),
    alpha = .7
  ) +
  geom_label(
    aes(label = scales::percent(percent / 100)),
    alpha = .5,
    nudge_y = .04
  ) +
  labs(
    title = "Future Conditions for MRI Research",
    x = "Condition",
    y = "Number of Times Selected"
  ) +
  scale_y_continuous(
    limits = c(0, max(future_conditions_counts$n) + 1)
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  guides(fill = "none")
```

### Summary of Free-text Comments

This section provides a summary of the open-ended comments, generated using the Gemini LMM.

```{r}
#| label: text-summary
#| results: asis

# Prompt for the Gemini LMM
summary_prompt <- "Please summarize the following survey responses regarding additional comments or conditions for MRI research. Combine them into a single, cohesive paragraph that highlights the main themes and suggestions. Focus on key ideas and avoid a simple list."

# Summarize the 'comments' column
text_summary <- summarize_text_response(dt$comments, summary_prompt)

# Print the summary
cat(text_summary)
```

## Conclusion

```{r}
#| label: all-summary
#| results: asis

# Prompt for the Gemini LMM
summary_prompt <- "Please write a compelling conclusion to the results of this survey on the need for more research focused MRI scanners in Norway."

# Summarize the 'comments' column
text_summary <- summarize_text_response(
  dt |>
    select(
      -contains("name"),
      -contains("email"),
      -contains("phone")
    ) |>
    dput() |>
    paste(collapse = " "),
  summary_prompt
)

# Print the summary
cat(text_summary)
```